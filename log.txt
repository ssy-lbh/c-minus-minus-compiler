parse.y: warning: shift/reduce conflict on token NAME [-Wcounterexamples]
  First example: program VOID • NAME '(' para_decl ')' '{' program '}'
  Shift derivation
    program
    ↳ 2: program stmt
                 ↳ 4: decl
                      ↳ 16: VOID func_name    '(' para_decl ')' '{' program '}'
                                 ↳ 19: • NAME
  Second example: program VOID • NAME SEMICOLON $end
  Reduce derivation
    $accept
    ↳ 0: program                                                   $end
         ↳ 2: program stmt
                      ↳ 4: decl
                           ↳ 14: type         var_name   SEMICOLON
                                 ↳ 20: VOID • ↳ 18: NAME
parse.y: warning: shift/reduce conflict on token NAME [-Wcounterexamples]
  First example: program INT • NAME '=' expr SEMICOLON
  Shift derivation
    program
    ↳ 2: program stmt
                 ↳ 4: decl
                      ↳ 15: INT var_name     '=' expr SEMICOLON
                                ↳ 18: • NAME
  Second example: program INT • NAME SEMICOLON $end
  Reduce derivation
    $accept
    ↳ 0: program                                                  $end
         ↳ 2: program stmt
                      ↳ 4: decl
                           ↳ 14: type        var_name   SEMICOLON
                                 ↳ 21: INT • ↳ 18: NAME
parse.y: warning: shift/reduce conflict on token NAME [-Wcounterexamples]
  First example: program INT • NAME '(' para_decl ')' '{' program '}'
  Shift derivation
    program
    ↳ 2: program stmt
                 ↳ 4: decl
                      ↳ 17: INT func_name    '(' para_decl ')' '{' program '}'
                                ↳ 19: • NAME
  Second example: program INT • NAME SEMICOLON $end
  Reduce derivation
    $accept
    ↳ 0: program                                                  $end
         ↳ 2: program stmt
                      ↳ 4: decl
                           ↳ 14: type        var_name   SEMICOLON
                                 ↳ 21: INT • ↳ 18: NAME